/**
 * @file typeit.js
 * @version 2.1.0
 * @author Chayson Media Group (https://chayson.com/)
 * @license MIT
 * @module TypeItEsm
 *
 * @description
 * Initializes dynamic typing effects with optional cursor animations for DOM elements.
 * This module is an updated and modular version inspired by:
 * - [Typer.js by straversi](https://github.com/straversi/Typer.js/)
 * - [typer.js by Steven](https://steven.codes/typerjs/)
 *
 * @features
 * - **Typing**: Character-by-character word typing with speed customization.
 * - **Deleting**: Backspacing effect to remove text before typing the next word.
 * - **Looping**: Continuous or single cycle display of words.
 * - **Color Change**: Adjust text color for each word.
 * - **Cursor Animation**: A blinking cursor effect synchronized with typing.
 * - **Control**: Supports stop/start functionality via associated buttons.
 *
 * @usage
 * - Add elements with the class `typeit` to customize typing effects:
 *  - Use `data-*` attributes for configuration.
 *   - `data-words`: list of words to type, e.g., `"Hello,World,TypeIt"`.
 *   - `data-colors`: List of colors for each word, e.g., `"red,blue,green"`.
 *   - `data-delay`: Typing delay per character in ms (default: 200).
 *   - `data-deleteDelay`: Delay before deleting text in ms (default: 800).
 *   - `data-loop`: Set to `"true"` for loop, `"false"` for one cycle (default: true).
 * - Optionally, add a blinking cursor with the `cursor` class:
 *  - Link to a `typeit` element with `data-owner`.
 *  - Customize cursor with `data-cursorDisplay1 (default: `_`).
 * - Add control buttons (`typeit-stop`, `typeit-start`) linked by `data-owner`.
 *
 * @exampleHtml
 * ```html
 * <span class="typeit" id="myTyper" data-words="Hellp,World,TypeIt" data-colors="red,blue,green" data-delay="150" data-deleteDelay="1000"></span>
 * <span class="cursor" data-owner="myTyper"></span>
 * <button class="typeit-stop" data-owner="myTyper">Stop</button> (optional)
 * <button class="typeit-start" data-owner="myTyper">Start</button> (optional)
 * ```
 *
 * @exampleCss
 * ```css
 * .cursor {
 *  font-weight: bold;
 *  color: inherit;
 * }
 * ```
 *
 * @howToCall
 * - Include this script as an ES module:
 * ```html
 * <script type="module" src="typeit.js"><\/script>
 * ```
 * - Call `TypeSetup` on DOM load:
 * ```javascript
 * import { TypeSetup } from './typeit.js';
 * document.addEventListener('DOMContentLoaded', TypeSetup);
 * ```
 *
 * @notes
 * - Unique IDs for `typeit` elements are essential.
 * - Customization via data attributes allows for script reuse without changes.
 * - Supports multiple `typeit` and `cursor` elements on a page.
 */
export class TypeItEsm{constructor(t){this.element=t,this.cursor=null;const s=t.dataset.delim||",",e=t.dataset.words||"override these,sample typing";this.words=e.split(s).filter((t=>t)),this.delayVariance=parseInt(t.dataset.delayVariance)||0,this.delay=parseInt(t.dataset.delay)||200,this.loop="false"!==t.dataset.loop,this.deleteDelay=parseInt(t.dataset.deletedelay||t.dataset.deleteDelay)||800,this.progress={word:0,char:0,building:!0,looped:0},this.typing=!0;const o=t.dataset.colors||"black";this.colors=o.split(","),this.element.style.color=this.colors[0],this.colorIndex=0,this.doTyping()}start(){this.typing||(this.typing=!0,this.doTyping())}stop(){this.typing=!1}doTyping(){const{element:t,progress:s,words:e}=this,{word:o,char:i,building:r}=s,n=[...e[o]].slice(0,i).join(""),a=i===e[o].length,l=(2*Math.random()-1)*this.delayVariance+this.delay;this.cursor&&this.cursor.element&&this.cursor.interval&&(this.cursor.element.style.opacity="1",this.cursor.on=!0,clearInterval(this.cursor.interval),this.cursor.interval=setInterval((()=>this.cursor.updateBlinkState()),400)),t.innerHTML=n,r?a?s.building=!1:s.char+=1:0===i?(s.building=!0,s.word=(o+1)%e.length,this.colorIndex=(this.colorIndex+1)%this.colors.length,t.style.color=this.colors[this.colorIndex]):s.char-=1,r||this.loop||s.word!==e.length-1||0!==i?setTimeout((()=>{this.typing&&this.doTyping()}),a?this.deleteDelay:l):this.typing=!1}}export class Cursor{constructor(t){this.element=t,this.cursorDisplay=t.dataset.cursordisplay||t.dataset.cursorDisplay||"_",t.innerHTML=this.cursorDisplay,this.on=!0,t.style.transition="all 100ms",this.interval=setInterval((()=>this.updateBlinkState()),400)}updateBlinkState(){this.element.style.opacity=this.on?"0":"1",this.on=!this.on}}export function TypeSetup(){const t={};for(const s of document.getElementsByClassName("typeit"))t[s.id]=new TypeItEsm(s);for(const s of document.getElementsByClassName("typeit-stop")){const e=t[s.dataset.owner];s.onclick=()=>e.stop()}for(const s of document.getElementsByClassName("typeit-start")){const e=t[s.dataset.owner];s.onclick=()=>e.start()}for(const s of document.getElementsByClassName("cursor")){const e=new Cursor(s);e.owner=t[s.dataset.owner],e.owner.cursor=e}}
//# sourceMappingURL=type-it.esm.min.js.map
